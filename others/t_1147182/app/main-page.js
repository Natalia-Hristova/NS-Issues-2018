"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var gauges_1 = require("nativescript-pro-ui/gauges");
var observable_array_1 = require("data/observable-array");
// Event handler for Page "navigatingTo" event attached in main-page.xml
function navigatingTo(args) {
    var page = args.object;
    var gauge = createGauge();
    page.content = gauge;
}
exports.navigatingTo = navigatingTo;
function createGauge() {
    var gauge = new gauges_1.RadRadialGauge();
    var scale = new gauges_1.RadialScale(); // <gauge:RadialScale minimum="0" maximum="6" radius="0.90">
    scale.minimum = 0;
    scale.maximum = 6;
    scale.radius = 0.9;
    var scaleStyle = new gauges_1.ScaleStyle();
    scaleStyle.majorTicksCount = 7;
    scaleStyle.minorTicksCount = 9;
    scaleStyle.lineThickness = 0;
    scaleStyle.labelsCount = 7;
    scaleStyle.ticksOffset = 0;
    scale.scaleStyle = scaleStyle;
    var indicator = new gauges_1.RadialBarIndicator();
    indicator.minimum = 0;
    indicator.maximum = 1.2;
    indicator.location = 0.97;
    scale.indicators = new observable_array_1.ObservableArray();
    scale.indicators.push(indicator);
    gauge.scales = new observable_array_1.ObservableArray();
    gauge.scales.push(scale);
    return gauge;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi1wYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibWFpbi1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBR0EscURBQWlJO0FBQ2pJLDBEQUF3RDtBQUN4RCx3RUFBd0U7QUFDeEUsc0JBQTZCLElBQWU7SUFFeEMsSUFBSSxJQUFJLEdBQVMsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUM3QixJQUFJLEtBQUssR0FBYSxXQUFXLEVBQUUsQ0FBQztJQUVwQyxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztBQUN6QixDQUFDO0FBTkQsb0NBTUM7QUFFRDtJQUNJLElBQUksS0FBSyxHQUFHLElBQUksdUJBQWMsRUFBRSxDQUFDO0lBRWpDLElBQUksS0FBSyxHQUFHLElBQUksb0JBQVcsRUFBRSxDQUFDLENBQUMsNERBQTREO0lBQzNGLEtBQUssQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO0lBQ2xCLEtBQUssQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO0lBQ2xCLEtBQUssQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO0lBRW5CLElBQUksVUFBVSxHQUFHLElBQUksbUJBQVUsRUFBRSxDQUFDO0lBQ2xDLFVBQVUsQ0FBQyxlQUFlLEdBQUcsQ0FBQyxDQUFDO0lBQy9CLFVBQVUsQ0FBQyxlQUFlLEdBQUcsQ0FBQyxDQUFDO0lBQy9CLFVBQVUsQ0FBQyxhQUFhLEdBQUcsQ0FBQyxDQUFDO0lBQzdCLFVBQVUsQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO0lBQzNCLFVBQVUsQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO0lBRTNCLEtBQUssQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO0lBRTlCLElBQUksU0FBUyxHQUFHLElBQUksMkJBQWtCLEVBQUUsQ0FBQztJQUN6QyxTQUFTLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztJQUN0QixTQUFTLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQztJQUN4QixTQUFTLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztJQUUxQixLQUFLLENBQUMsVUFBVSxHQUFHLElBQUksa0NBQWUsRUFBRSxDQUFDO0lBQ3pDLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBRWpDLEtBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxrQ0FBZSxFQUFFLENBQUM7SUFDckMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFekIsTUFBTSxDQUFDLEtBQUssQ0FBQztBQUNqQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBFdmVudERhdGEgfSBmcm9tICdkYXRhL29ic2VydmFibGUnO1xuaW1wb3J0IHsgUGFnZSB9IGZyb20gJ3VpL3BhZ2UnO1xuaW1wb3J0IHsgUmFkR2F1Z2UsIFJhZFJhZGlhbEdhdWdlLCBSYWRpYWxTY2FsZSwgUmFkaWFsTmVlZGxlLCBSYWRpYWxCYXJJbmRpY2F0b3IsIFNjYWxlU3R5bGUgfSBmcm9tIFwibmF0aXZlc2NyaXB0LXByby11aS9nYXVnZXNcIjtcbmltcG9ydCB7IE9ic2VydmFibGVBcnJheSB9IGZyb20gXCJkYXRhL29ic2VydmFibGUtYXJyYXlcIjtcbi8vIEV2ZW50IGhhbmRsZXIgZm9yIFBhZ2UgXCJuYXZpZ2F0aW5nVG9cIiBldmVudCBhdHRhY2hlZCBpbiBtYWluLXBhZ2UueG1sXG5leHBvcnQgZnVuY3Rpb24gbmF2aWdhdGluZ1RvKGFyZ3M6IEV2ZW50RGF0YSkge1xuXG4gICAgbGV0IHBhZ2UgPSA8UGFnZT5hcmdzLm9iamVjdDtcbiAgICBsZXQgZ2F1Z2U6IFJhZEdhdWdlID0gY3JlYXRlR2F1Z2UoKTtcblxuICAgIHBhZ2UuY29udGVudCA9IGdhdWdlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVHYXVnZSgpOiBSYWRHYXVnZSB7XG4gICAgbGV0IGdhdWdlID0gbmV3IFJhZFJhZGlhbEdhdWdlKCk7XG5cbiAgICBsZXQgc2NhbGUgPSBuZXcgUmFkaWFsU2NhbGUoKTsgLy8gPGdhdWdlOlJhZGlhbFNjYWxlIG1pbmltdW09XCIwXCIgbWF4aW11bT1cIjZcIiByYWRpdXM9XCIwLjkwXCI+XG4gICAgc2NhbGUubWluaW11bSA9IDA7XG4gICAgc2NhbGUubWF4aW11bSA9IDY7XG4gICAgc2NhbGUucmFkaXVzID0gMC45O1xuXG4gICAgbGV0IHNjYWxlU3R5bGUgPSBuZXcgU2NhbGVTdHlsZSgpO1xuICAgIHNjYWxlU3R5bGUubWFqb3JUaWNrc0NvdW50ID0gNztcbiAgICBzY2FsZVN0eWxlLm1pbm9yVGlja3NDb3VudCA9IDk7XG4gICAgc2NhbGVTdHlsZS5saW5lVGhpY2tuZXNzID0gMDtcbiAgICBzY2FsZVN0eWxlLmxhYmVsc0NvdW50ID0gNztcbiAgICBzY2FsZVN0eWxlLnRpY2tzT2Zmc2V0ID0gMDtcblxuICAgIHNjYWxlLnNjYWxlU3R5bGUgPSBzY2FsZVN0eWxlO1xuXG4gICAgbGV0IGluZGljYXRvciA9IG5ldyBSYWRpYWxCYXJJbmRpY2F0b3IoKTtcbiAgICBpbmRpY2F0b3IubWluaW11bSA9IDA7XG4gICAgaW5kaWNhdG9yLm1heGltdW0gPSAxLjI7XG4gICAgaW5kaWNhdG9yLmxvY2F0aW9uID0gMC45NztcblxuICAgIHNjYWxlLmluZGljYXRvcnMgPSBuZXcgT2JzZXJ2YWJsZUFycmF5KCk7XG4gICAgc2NhbGUuaW5kaWNhdG9ycy5wdXNoKGluZGljYXRvcik7XG5cbiAgICBnYXVnZS5zY2FsZXMgPSBuZXcgT2JzZXJ2YWJsZUFycmF5KCk7XG4gICAgZ2F1Z2Uuc2NhbGVzLnB1c2goc2NhbGUpO1xuXG4gICAgcmV0dXJuIGdhdWdlO1xufSJdfQ==