"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var nativescript_radio_1 = require("nativescript-radio");
var color_1 = require("color");
var page;
var stack;
// Event handler for Page "navigatingTo" event attached in main-page.xml
function navigatingTo(args) {
    page = args.object;
    stack = page.getViewById("container");
}
exports.navigatingTo = navigatingTo;
function onAddRadioGroup(args) {
    var newGroup = createRadioGroup();
    stack.addChild(newGroup);
}
exports.onAddRadioGroup = onAddRadioGroup;
function createRadioGroup() {
    // cast the radioGroup to any so we could reuse the addChild from the extender StackLayout (RsdioGroupBase is extending StackLayout)
    var radioGroup = new nativescript_radio_1.RadioGroup();
    radioGroup.on("checkedChanged", function (args) {
        console.log("on checkedChanged");
    });
    var radioButton1 = new nativescript_radio_1.RadioButton();
    radioButton1.text = "California";
    radioButton1.color = new color_1.Color("red");
    radioButton1.tint = "green";
    radioButton1.fontSize = 28;
    var radioButton2 = new nativescript_radio_1.RadioButton();
    radioButton2.text = "Arisona";
    radioButton2.checked = true;
    radioButton1.color = new color_1.Color("blue");
    radioButton1.tint = "green";
    radioButton1.fontSize = 28;
    var radioButton3 = new nativescript_radio_1.RadioButton();
    radioButton3.text = "Ohio";
    radioGroup.addChild(radioButton1);
    radioGroup.addChild(radioButton2);
    radioGroup.addChild(radioButton3);
    return radioGroup;
}
exports.createRadioGroup = createRadioGroup;
// <ui:RadioGroup checkedChanged="onCheckedChanged" id="myRadioGroup">
//     <ui:RadioButton id="firstRadio" text="California" color="#000000" tint="#607d8b" backgroundColor="green" fontSize="20"/>
//     <ui:RadioButton id="secondRadio" checked="true" text="California2" color="#0000FF" tint="#607d8b" backgroundColor="green" fontSize="20" marginTop="20"/>
//     <ui:RadioButton id="thridRadio"  text="California3" color="#0000FF" tint="#607d8b" backgroundColor="green" fontSize="20" marginTop="20"/>
// </ui:RadioGroup> 
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi1wYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibWFpbi1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBR0EseURBQTZEO0FBRzdELCtCQUE4QjtBQUU5QixJQUFJLElBQVUsQ0FBQztBQUNmLElBQUksS0FBa0IsQ0FBQztBQUV2Qix3RUFBd0U7QUFDeEUsc0JBQTZCLElBQWU7SUFDeEMsSUFBSSxHQUFTLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDekIsS0FBSyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDMUMsQ0FBQztBQUhELG9DQUdDO0FBR0QseUJBQWdDLElBQWU7SUFDM0MsSUFBSSxRQUFRLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQztJQUNsQyxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzdCLENBQUM7QUFIRCwwQ0FHQztBQUVEO0lBQ0ksb0lBQW9JO0lBQ3BJLElBQUksVUFBVSxHQUFRLElBQUksK0JBQVUsRUFBRSxDQUFDO0lBRXZDLFVBQVUsQ0FBQyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsVUFBQyxJQUFJO1FBQ2pDLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUNyQyxDQUFDLENBQUMsQ0FBQTtJQUVGLElBQUksWUFBWSxHQUFHLElBQUksZ0NBQVcsRUFBRSxDQUFDO0lBQ3JDLFlBQVksQ0FBQyxJQUFJLEdBQUcsWUFBWSxDQUFDO0lBQ2pDLFlBQVksQ0FBQyxLQUFLLEdBQUcsSUFBSSxhQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEMsWUFBWSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUM7SUFDNUIsWUFBWSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFFM0IsSUFBSSxZQUFZLEdBQUcsSUFBSSxnQ0FBVyxFQUFFLENBQUM7SUFDckMsWUFBWSxDQUFDLElBQUksR0FBRyxTQUFTLENBQUM7SUFDOUIsWUFBWSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7SUFDNUIsWUFBWSxDQUFDLEtBQUssR0FBRyxJQUFJLGFBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN2QyxZQUFZLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQztJQUM1QixZQUFZLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUUzQixJQUFJLFlBQVksR0FBRyxJQUFJLGdDQUFXLEVBQUUsQ0FBQztJQUNyQyxZQUFZLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQztJQUUzQixVQUFVLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ2xDLFVBQVUsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDbEMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUVsQyxNQUFNLENBQUMsVUFBVSxDQUFDO0FBQ3RCLENBQUM7QUE3QkQsNENBNkJDO0FBRUQsc0VBQXNFO0FBQ3RFLCtIQUErSDtBQUMvSCwrSkFBK0o7QUFDL0osZ0pBQWdKO0FBQ2hKLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RGF0YSB9IGZyb20gJ2RhdGEvb2JzZXJ2YWJsZSc7XG5pbXBvcnQgeyBQYWdlIH0gZnJvbSAndWkvcGFnZSc7XG5cbmltcG9ydCB7IFJhZGlvQnV0dG9uLCBSYWRpb0dyb3VwIH0gZnJvbSAnbmF0aXZlc2NyaXB0LXJhZGlvJztcbmltcG9ydCB7IFN0YWNrTGF5b3V0IH0gZnJvbSBcInVpL2xheW91dHMvc3RhY2stbGF5b3V0XCI7XG5cbmltcG9ydCB7IENvbG9yIH0gZnJvbSBcImNvbG9yXCI7XG5cbmxldCBwYWdlOiBQYWdlO1xubGV0IHN0YWNrOiBTdGFja0xheW91dDtcblxuLy8gRXZlbnQgaGFuZGxlciBmb3IgUGFnZSBcIm5hdmlnYXRpbmdUb1wiIGV2ZW50IGF0dGFjaGVkIGluIG1haW4tcGFnZS54bWxcbmV4cG9ydCBmdW5jdGlvbiBuYXZpZ2F0aW5nVG8oYXJnczogRXZlbnREYXRhKSB7XG4gICAgcGFnZSA9IDxQYWdlPmFyZ3Mub2JqZWN0O1xuICAgIHN0YWNrID0gcGFnZS5nZXRWaWV3QnlJZChcImNvbnRhaW5lclwiKTtcbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gb25BZGRSYWRpb0dyb3VwKGFyZ3M6IEV2ZW50RGF0YSkge1xuICAgIGxldCBuZXdHcm91cCA9IGNyZWF0ZVJhZGlvR3JvdXAoKTtcbiAgICBzdGFjay5hZGRDaGlsZChuZXdHcm91cCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSYWRpb0dyb3VwKCkge1xuICAgIC8vIGNhc3QgdGhlIHJhZGlvR3JvdXAgdG8gYW55IHNvIHdlIGNvdWxkIHJldXNlIHRoZSBhZGRDaGlsZCBmcm9tIHRoZSBleHRlbmRlciBTdGFja0xheW91dCAoUnNkaW9Hcm91cEJhc2UgaXMgZXh0ZW5kaW5nIFN0YWNrTGF5b3V0KVxuICAgIGxldCByYWRpb0dyb3VwOiBhbnkgPSBuZXcgUmFkaW9Hcm91cCgpOyBcblxuICAgIHJhZGlvR3JvdXAub24oXCJjaGVja2VkQ2hhbmdlZFwiLCAoYXJncykgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhcIm9uIGNoZWNrZWRDaGFuZ2VkXCIpO1xuICAgIH0pXG5cbiAgICBsZXQgcmFkaW9CdXR0b24xID0gbmV3IFJhZGlvQnV0dG9uKCk7XG4gICAgcmFkaW9CdXR0b24xLnRleHQgPSBcIkNhbGlmb3JuaWFcIjtcbiAgICByYWRpb0J1dHRvbjEuY29sb3IgPSBuZXcgQ29sb3IoXCJyZWRcIik7XG4gICAgcmFkaW9CdXR0b24xLnRpbnQgPSBcImdyZWVuXCI7XG4gICAgcmFkaW9CdXR0b24xLmZvbnRTaXplID0gMjg7XG5cbiAgICBsZXQgcmFkaW9CdXR0b24yID0gbmV3IFJhZGlvQnV0dG9uKCk7XG4gICAgcmFkaW9CdXR0b24yLnRleHQgPSBcIkFyaXNvbmFcIjtcbiAgICByYWRpb0J1dHRvbjIuY2hlY2tlZCA9IHRydWU7XG4gICAgcmFkaW9CdXR0b24xLmNvbG9yID0gbmV3IENvbG9yKFwiYmx1ZVwiKTtcbiAgICByYWRpb0J1dHRvbjEudGludCA9IFwiZ3JlZW5cIjtcbiAgICByYWRpb0J1dHRvbjEuZm9udFNpemUgPSAyODtcblxuICAgIGxldCByYWRpb0J1dHRvbjMgPSBuZXcgUmFkaW9CdXR0b24oKTtcbiAgICByYWRpb0J1dHRvbjMudGV4dCA9IFwiT2hpb1wiO1xuXG4gICAgcmFkaW9Hcm91cC5hZGRDaGlsZChyYWRpb0J1dHRvbjEpO1xuICAgIHJhZGlvR3JvdXAuYWRkQ2hpbGQocmFkaW9CdXR0b24yKTtcbiAgICByYWRpb0dyb3VwLmFkZENoaWxkKHJhZGlvQnV0dG9uMyk7XG5cbiAgICByZXR1cm4gcmFkaW9Hcm91cDtcbn1cblxuLy8gPHVpOlJhZGlvR3JvdXAgY2hlY2tlZENoYW5nZWQ9XCJvbkNoZWNrZWRDaGFuZ2VkXCIgaWQ9XCJteVJhZGlvR3JvdXBcIj5cbi8vICAgICA8dWk6UmFkaW9CdXR0b24gaWQ9XCJmaXJzdFJhZGlvXCIgdGV4dD1cIkNhbGlmb3JuaWFcIiBjb2xvcj1cIiMwMDAwMDBcIiB0aW50PVwiIzYwN2Q4YlwiIGJhY2tncm91bmRDb2xvcj1cImdyZWVuXCIgZm9udFNpemU9XCIyMFwiLz5cbi8vICAgICA8dWk6UmFkaW9CdXR0b24gaWQ9XCJzZWNvbmRSYWRpb1wiIGNoZWNrZWQ9XCJ0cnVlXCIgdGV4dD1cIkNhbGlmb3JuaWEyXCIgY29sb3I9XCIjMDAwMEZGXCIgdGludD1cIiM2MDdkOGJcIiBiYWNrZ3JvdW5kQ29sb3I9XCJncmVlblwiIGZvbnRTaXplPVwiMjBcIiBtYXJnaW5Ub3A9XCIyMFwiLz5cbi8vICAgICA8dWk6UmFkaW9CdXR0b24gaWQ9XCJ0aHJpZFJhZGlvXCIgIHRleHQ9XCJDYWxpZm9ybmlhM1wiIGNvbG9yPVwiIzAwMDBGRlwiIHRpbnQ9XCIjNjA3ZDhiXCIgYmFja2dyb3VuZENvbG9yPVwiZ3JlZW5cIiBmb250U2l6ZT1cIjIwXCIgbWFyZ2luVG9wPVwiMjBcIi8+XG4vLyA8L3VpOlJhZGlvR3JvdXA+Il19