"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var nativescript_radio_1 = require("nativescript-radio");
var color_1 = require("color");
var page;
var stack;
// Event handler for Page "navigatingTo" event attached in main-page.xml
function navigatingTo(args) {
    page = args.object;
    stack = page.getViewById("container");
}
exports.navigatingTo = navigatingTo;
function onCheckRadioButtons() {
    var firstRadio = page.getViewById("firstRadio");
    var secondRadio = page.getViewById("secondRadio");
    console.log("firstRadio: " + firstRadio.checked);
    console.log("secondRadio: " + secondRadio.checked);
}
exports.onCheckRadioButtons = onCheckRadioButtons;
function onAddRadioGroup(args) {
    var newGroup = createRadioGroup();
    stack.addChild(newGroup);
}
exports.onAddRadioGroup = onAddRadioGroup;
function createRadioGroup() {
    // cast the radioGroup to any so we could reuse the addChild from the extender StackLayout (RsdioGroupBase is extending StackLayout)
    var radioGroup = new nativescript_radio_1.RadioGroup();
    radioGroup.on("checkedChanged", function (args) {
        console.log("on checkedChanged");
    });
    var radioButton1 = new nativescript_radio_1.RadioButton();
    radioButton1.text = "California";
    radioButton1.color = new color_1.Color("red");
    radioButton1.tint = "green";
    radioButton1.fontSize = 28;
    var radioButton2 = new nativescript_radio_1.RadioButton();
    radioButton2.text = "Arisona";
    radioButton2.checked = true;
    radioButton1.color = new color_1.Color("blue");
    radioButton1.tint = "green";
    radioButton1.fontSize = 28;
    var radioButton3 = new nativescript_radio_1.RadioButton();
    radioButton3.text = "Ohio";
    radioGroup.addChild(radioButton1);
    radioGroup.addChild(radioButton2);
    radioGroup.addChild(radioButton3);
    return radioGroup;
}
exports.createRadioGroup = createRadioGroup;
// <ui:RadioGroup checkedChanged="onCheckedChanged" id="myRadioGroup">
//     <ui:RadioButton id="firstRadio" text="California" color="#000000" tint="#607d8b" backgroundColor="green" fontSize="20"/>
//     <ui:RadioButton id="secondRadio" checked="true" text="California2" color="#0000FF" tint="#607d8b" backgroundColor="green" fontSize="20" marginTop="20"/>
//     <ui:RadioButton id="thridRadio"  text="California3" color="#0000FF" tint="#607d8b" backgroundColor="green" fontSize="20" marginTop="20"/>
// </ui:RadioGroup> 
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi1wYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibWFpbi1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBR0EseURBQTZEO0FBRzdELCtCQUE4QjtBQUU5QixJQUFJLElBQVUsQ0FBQztBQUNmLElBQUksS0FBa0IsQ0FBQztBQUV2Qix3RUFBd0U7QUFDeEUsc0JBQTZCLElBQWU7SUFDeEMsSUFBSSxHQUFTLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDekIsS0FBSyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDMUMsQ0FBQztBQUhELG9DQUdDO0FBRUQ7SUFDSSxJQUFJLFVBQVUsR0FBZ0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUM3RCxJQUFJLFdBQVcsR0FBZ0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUUvRCxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsR0FBRyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDakQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLEdBQUcsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3ZELENBQUM7QUFORCxrREFNQztBQUVELHlCQUFnQyxJQUFlO0lBQzNDLElBQUksUUFBUSxHQUFHLGdCQUFnQixFQUFFLENBQUM7SUFDbEMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM3QixDQUFDO0FBSEQsMENBR0M7QUFFRDtJQUNJLG9JQUFvSTtJQUNwSSxJQUFJLFVBQVUsR0FBUSxJQUFJLCtCQUFVLEVBQUUsQ0FBQztJQUV2QyxVQUFVLENBQUMsRUFBRSxDQUFDLGdCQUFnQixFQUFFLFVBQUMsSUFBSTtRQUNqQyxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFDckMsQ0FBQyxDQUFDLENBQUE7SUFFRixJQUFJLFlBQVksR0FBRyxJQUFJLGdDQUFXLEVBQUUsQ0FBQztJQUNyQyxZQUFZLENBQUMsSUFBSSxHQUFHLFlBQVksQ0FBQztJQUNqQyxZQUFZLENBQUMsS0FBSyxHQUFHLElBQUksYUFBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3RDLFlBQVksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO0lBQzVCLFlBQVksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBRTNCLElBQUksWUFBWSxHQUFHLElBQUksZ0NBQVcsRUFBRSxDQUFDO0lBQ3JDLFlBQVksQ0FBQyxJQUFJLEdBQUcsU0FBUyxDQUFDO0lBQzlCLFlBQVksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0lBQzVCLFlBQVksQ0FBQyxLQUFLLEdBQUcsSUFBSSxhQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdkMsWUFBWSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUM7SUFDNUIsWUFBWSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFFM0IsSUFBSSxZQUFZLEdBQUcsSUFBSSxnQ0FBVyxFQUFFLENBQUM7SUFDckMsWUFBWSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUM7SUFFM0IsVUFBVSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNsQyxVQUFVLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ2xDLFVBQVUsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7SUFFbEMsTUFBTSxDQUFDLFVBQVUsQ0FBQztBQUN0QixDQUFDO0FBN0JELDRDQTZCQztBQUVELHNFQUFzRTtBQUN0RSwrSEFBK0g7QUFDL0gsK0pBQStKO0FBQy9KLGdKQUFnSjtBQUNoSixtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudERhdGEgfSBmcm9tICdkYXRhL29ic2VydmFibGUnO1xyXG5pbXBvcnQgeyBQYWdlIH0gZnJvbSAndWkvcGFnZSc7XHJcblxyXG5pbXBvcnQgeyBSYWRpb0J1dHRvbiwgUmFkaW9Hcm91cCB9IGZyb20gJ25hdGl2ZXNjcmlwdC1yYWRpbyc7XHJcbmltcG9ydCB7IFN0YWNrTGF5b3V0IH0gZnJvbSBcInVpL2xheW91dHMvc3RhY2stbGF5b3V0XCI7XHJcblxyXG5pbXBvcnQgeyBDb2xvciB9IGZyb20gXCJjb2xvclwiO1xyXG5cclxubGV0IHBhZ2U6IFBhZ2U7XHJcbmxldCBzdGFjazogU3RhY2tMYXlvdXQ7XHJcblxyXG4vLyBFdmVudCBoYW5kbGVyIGZvciBQYWdlIFwibmF2aWdhdGluZ1RvXCIgZXZlbnQgYXR0YWNoZWQgaW4gbWFpbi1wYWdlLnhtbFxyXG5leHBvcnQgZnVuY3Rpb24gbmF2aWdhdGluZ1RvKGFyZ3M6IEV2ZW50RGF0YSkge1xyXG4gICAgcGFnZSA9IDxQYWdlPmFyZ3Mub2JqZWN0O1xyXG4gICAgc3RhY2sgPSBwYWdlLmdldFZpZXdCeUlkKFwiY29udGFpbmVyXCIpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gb25DaGVja1JhZGlvQnV0dG9ucygpIHtcclxuICAgIGxldCBmaXJzdFJhZGlvOiBSYWRpb0J1dHRvbiA9IHBhZ2UuZ2V0Vmlld0J5SWQoXCJmaXJzdFJhZGlvXCIpO1xyXG4gICAgbGV0IHNlY29uZFJhZGlvOiBSYWRpb0J1dHRvbiA9IHBhZ2UuZ2V0Vmlld0J5SWQoXCJzZWNvbmRSYWRpb1wiKTtcclxuICAgIFxyXG4gICAgY29uc29sZS5sb2coXCJmaXJzdFJhZGlvOiBcIiArIGZpcnN0UmFkaW8uY2hlY2tlZCk7XHJcbiAgICBjb25zb2xlLmxvZyhcInNlY29uZFJhZGlvOiBcIiArIHNlY29uZFJhZGlvLmNoZWNrZWQpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gb25BZGRSYWRpb0dyb3VwKGFyZ3M6IEV2ZW50RGF0YSkge1xyXG4gICAgbGV0IG5ld0dyb3VwID0gY3JlYXRlUmFkaW9Hcm91cCgpO1xyXG4gICAgc3RhY2suYWRkQ2hpbGQobmV3R3JvdXApO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUmFkaW9Hcm91cCgpIHtcclxuICAgIC8vIGNhc3QgdGhlIHJhZGlvR3JvdXAgdG8gYW55IHNvIHdlIGNvdWxkIHJldXNlIHRoZSBhZGRDaGlsZCBmcm9tIHRoZSBleHRlbmRlciBTdGFja0xheW91dCAoUnNkaW9Hcm91cEJhc2UgaXMgZXh0ZW5kaW5nIFN0YWNrTGF5b3V0KVxyXG4gICAgbGV0IHJhZGlvR3JvdXA6IGFueSA9IG5ldyBSYWRpb0dyb3VwKCk7IFxyXG5cclxuICAgIHJhZGlvR3JvdXAub24oXCJjaGVja2VkQ2hhbmdlZFwiLCAoYXJncykgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwib24gY2hlY2tlZENoYW5nZWRcIik7XHJcbiAgICB9KVxyXG5cclxuICAgIGxldCByYWRpb0J1dHRvbjEgPSBuZXcgUmFkaW9CdXR0b24oKTtcclxuICAgIHJhZGlvQnV0dG9uMS50ZXh0ID0gXCJDYWxpZm9ybmlhXCI7XHJcbiAgICByYWRpb0J1dHRvbjEuY29sb3IgPSBuZXcgQ29sb3IoXCJyZWRcIik7XHJcbiAgICByYWRpb0J1dHRvbjEudGludCA9IFwiZ3JlZW5cIjtcclxuICAgIHJhZGlvQnV0dG9uMS5mb250U2l6ZSA9IDI4O1xyXG5cclxuICAgIGxldCByYWRpb0J1dHRvbjIgPSBuZXcgUmFkaW9CdXR0b24oKTtcclxuICAgIHJhZGlvQnV0dG9uMi50ZXh0ID0gXCJBcmlzb25hXCI7XHJcbiAgICByYWRpb0J1dHRvbjIuY2hlY2tlZCA9IHRydWU7XHJcbiAgICByYWRpb0J1dHRvbjEuY29sb3IgPSBuZXcgQ29sb3IoXCJibHVlXCIpO1xyXG4gICAgcmFkaW9CdXR0b24xLnRpbnQgPSBcImdyZWVuXCI7XHJcbiAgICByYWRpb0J1dHRvbjEuZm9udFNpemUgPSAyODtcclxuXHJcbiAgICBsZXQgcmFkaW9CdXR0b24zID0gbmV3IFJhZGlvQnV0dG9uKCk7XHJcbiAgICByYWRpb0J1dHRvbjMudGV4dCA9IFwiT2hpb1wiO1xyXG5cclxuICAgIHJhZGlvR3JvdXAuYWRkQ2hpbGQocmFkaW9CdXR0b24xKTtcclxuICAgIHJhZGlvR3JvdXAuYWRkQ2hpbGQocmFkaW9CdXR0b24yKTtcclxuICAgIHJhZGlvR3JvdXAuYWRkQ2hpbGQocmFkaW9CdXR0b24zKTtcclxuXHJcbiAgICByZXR1cm4gcmFkaW9Hcm91cDtcclxufVxyXG5cclxuLy8gPHVpOlJhZGlvR3JvdXAgY2hlY2tlZENoYW5nZWQ9XCJvbkNoZWNrZWRDaGFuZ2VkXCIgaWQ9XCJteVJhZGlvR3JvdXBcIj5cclxuLy8gICAgIDx1aTpSYWRpb0J1dHRvbiBpZD1cImZpcnN0UmFkaW9cIiB0ZXh0PVwiQ2FsaWZvcm5pYVwiIGNvbG9yPVwiIzAwMDAwMFwiIHRpbnQ9XCIjNjA3ZDhiXCIgYmFja2dyb3VuZENvbG9yPVwiZ3JlZW5cIiBmb250U2l6ZT1cIjIwXCIvPlxyXG4vLyAgICAgPHVpOlJhZGlvQnV0dG9uIGlkPVwic2Vjb25kUmFkaW9cIiBjaGVja2VkPVwidHJ1ZVwiIHRleHQ9XCJDYWxpZm9ybmlhMlwiIGNvbG9yPVwiIzAwMDBGRlwiIHRpbnQ9XCIjNjA3ZDhiXCIgYmFja2dyb3VuZENvbG9yPVwiZ3JlZW5cIiBmb250U2l6ZT1cIjIwXCIgbWFyZ2luVG9wPVwiMjBcIi8+XHJcbi8vICAgICA8dWk6UmFkaW9CdXR0b24gaWQ9XCJ0aHJpZFJhZGlvXCIgIHRleHQ9XCJDYWxpZm9ybmlhM1wiIGNvbG9yPVwiIzAwMDBGRlwiIHRpbnQ9XCIjNjA3ZDhiXCIgYmFja2dyb3VuZENvbG9yPVwiZ3JlZW5cIiBmb250U2l6ZT1cIjIwXCIgbWFyZ2luVG9wPVwiMjBcIi8+XHJcbi8vIDwvdWk6UmFkaW9Hcm91cD4iXX0=