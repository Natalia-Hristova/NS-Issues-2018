"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var application = require("application");
function onNavigatingTo(args) {
    var page = args.object;
    console.log("onNavigatingTo > application.android.startActivity: " + application.android.startActivity); // the start activity
    console.log("onNavigatingTo > application.android.foregroundActivity: " + application.android.foregroundActivity); // undefined
}
exports.onNavigatingTo = onNavigatingTo;
function onLoaded(args) {
    application.on(application.resumeEvent, function (args) {
        if (args.android) {
            // For Android applications, args.android is an android activity class.
            console.log("application.resumeEvent >>> Activity: " + args.android);
        }
        else if (args.ios) {
            // For iOS applications, args.ios is UIApplication.
            console.log("UIApplication: " + args.ios);
        }
    });
    console.log("onLoaded >>> application.android.startActivity: " + application.android.startActivity); // the start activity
    console.log("onLoaded >>> application.android.foregroundActivity: " + application.android.foregroundActivity); // undefined
}
exports.onLoaded = onLoaded;
function onNavigatedTo(args) {
    console.log("onNavigatedTo >>>>> application.android.startActivity: " + application.android.startActivity); // the start activity
    console.log("onNavigatedTo >>>>> application.android.foregroundActivity: " + application.android.foregroundActivity); // the foreground activity
}
exports.onNavigatedTo = onNavigatedTo;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi1wYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibWFpbi1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEseUNBQTJDO0FBRTNDLHdCQUErQixJQUFlO0lBQzFDLElBQUksSUFBSSxHQUFTLElBQUksQ0FBQyxNQUFNLENBQUM7SUFFN0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxzREFBc0QsR0FBRyxXQUFXLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMscUJBQXFCO0lBQzlILE9BQU8sQ0FBQyxHQUFHLENBQUMsMkRBQTJELEdBQUcsV0FBVyxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsWUFBWTtBQUNuSSxDQUFDO0FBTEQsd0NBS0M7QUFFRCxrQkFBeUIsSUFBZTtJQUNwQyxXQUFXLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxXQUFXLEVBQUUsVUFBQyxJQUFzQztRQUMzRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUNmLHVFQUF1RTtZQUN2RSxPQUFPLENBQUMsR0FBRyxDQUFDLHdDQUF3QyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN6RSxDQUFDO1FBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ2xCLG1EQUFtRDtZQUNuRCxPQUFPLENBQUMsR0FBRyxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM5QyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7SUFFSCxPQUFPLENBQUMsR0FBRyxDQUFDLGtEQUFrRCxHQUFHLFdBQVcsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBRSxxQkFBcUI7SUFDM0gsT0FBTyxDQUFDLEdBQUcsQ0FBQyx1REFBdUQsR0FBRyxXQUFXLENBQUMsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxZQUFZO0FBQy9ILENBQUM7QUFiRCw0QkFhQztBQUVELHVCQUE4QixJQUFlO0lBQ3pDLE9BQU8sQ0FBQyxHQUFHLENBQUMseURBQXlELEdBQUcsV0FBVyxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLHFCQUFxQjtJQUNqSSxPQUFPLENBQUMsR0FBRyxDQUFDLDhEQUE4RCxHQUFHLFdBQVcsQ0FBQyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFFLDBCQUEwQjtBQUNySixDQUFDO0FBSEQsc0NBR0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudERhdGEgfSBmcm9tICdkYXRhL29ic2VydmFibGUnO1xuaW1wb3J0IHsgUGFnZSB9IGZyb20gJ3VpL3BhZ2UnO1xuaW1wb3J0ICogYXMgYXBwbGljYXRpb24gZnJvbSBcImFwcGxpY2F0aW9uXCI7XG4gICAgXG5leHBvcnQgZnVuY3Rpb24gb25OYXZpZ2F0aW5nVG8oYXJnczogRXZlbnREYXRhKSB7XG4gICAgbGV0IHBhZ2UgPSA8UGFnZT5hcmdzLm9iamVjdDtcblxuICAgIGNvbnNvbGUubG9nKFwib25OYXZpZ2F0aW5nVG8gPiBhcHBsaWNhdGlvbi5hbmRyb2lkLnN0YXJ0QWN0aXZpdHk6IFwiICsgYXBwbGljYXRpb24uYW5kcm9pZC5zdGFydEFjdGl2aXR5KTsgLy8gdGhlIHN0YXJ0IGFjdGl2aXR5XG4gICAgY29uc29sZS5sb2coXCJvbk5hdmlnYXRpbmdUbyA+IGFwcGxpY2F0aW9uLmFuZHJvaWQuZm9yZWdyb3VuZEFjdGl2aXR5OiBcIiArIGFwcGxpY2F0aW9uLmFuZHJvaWQuZm9yZWdyb3VuZEFjdGl2aXR5KTsgLy8gdW5kZWZpbmVkXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvbkxvYWRlZChhcmdzOiBFdmVudERhdGEpIHtcbiAgICBhcHBsaWNhdGlvbi5vbihhcHBsaWNhdGlvbi5yZXN1bWVFdmVudCwgKGFyZ3M6IGFwcGxpY2F0aW9uLkFwcGxpY2F0aW9uRXZlbnREYXRhKSA9PiB7XG4gICAgICAgIGlmIChhcmdzLmFuZHJvaWQpIHtcbiAgICAgICAgICAgIC8vIEZvciBBbmRyb2lkIGFwcGxpY2F0aW9ucywgYXJncy5hbmRyb2lkIGlzIGFuIGFuZHJvaWQgYWN0aXZpdHkgY2xhc3MuXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcImFwcGxpY2F0aW9uLnJlc3VtZUV2ZW50ID4+PiBBY3Rpdml0eTogXCIgKyBhcmdzLmFuZHJvaWQpO1xuICAgICAgICB9IGVsc2UgaWYgKGFyZ3MuaW9zKSB7XG4gICAgICAgICAgICAvLyBGb3IgaU9TIGFwcGxpY2F0aW9ucywgYXJncy5pb3MgaXMgVUlBcHBsaWNhdGlvbi5cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiVUlBcHBsaWNhdGlvbjogXCIgKyBhcmdzLmlvcyk7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIGNvbnNvbGUubG9nKFwib25Mb2FkZWQgPj4+IGFwcGxpY2F0aW9uLmFuZHJvaWQuc3RhcnRBY3Rpdml0eTogXCIgKyBhcHBsaWNhdGlvbi5hbmRyb2lkLnN0YXJ0QWN0aXZpdHkpOyAgLy8gdGhlIHN0YXJ0IGFjdGl2aXR5XG4gICAgY29uc29sZS5sb2coXCJvbkxvYWRlZCA+Pj4gYXBwbGljYXRpb24uYW5kcm9pZC5mb3JlZ3JvdW5kQWN0aXZpdHk6IFwiICsgYXBwbGljYXRpb24uYW5kcm9pZC5mb3JlZ3JvdW5kQWN0aXZpdHkpOyAvLyB1bmRlZmluZWRcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uTmF2aWdhdGVkVG8oYXJnczogRXZlbnREYXRhKSB7XG4gICAgY29uc29sZS5sb2coXCJvbk5hdmlnYXRlZFRvID4+Pj4+IGFwcGxpY2F0aW9uLmFuZHJvaWQuc3RhcnRBY3Rpdml0eTogXCIgKyBhcHBsaWNhdGlvbi5hbmRyb2lkLnN0YXJ0QWN0aXZpdHkpOyAvLyB0aGUgc3RhcnQgYWN0aXZpdHlcbiAgICBjb25zb2xlLmxvZyhcIm9uTmF2aWdhdGVkVG8gPj4+Pj4gYXBwbGljYXRpb24uYW5kcm9pZC5mb3JlZ3JvdW5kQWN0aXZpdHk6IFwiICsgYXBwbGljYXRpb24uYW5kcm9pZC5mb3JlZ3JvdW5kQWN0aXZpdHkpOyAgLy8gdGhlIGZvcmVncm91bmQgYWN0aXZpdHlcbn0iXX0=